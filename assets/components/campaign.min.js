"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Campaign = function (_React$Component) {
  _inherits(Campaign, _React$Component);

  function Campaign() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Campaign);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Campaign)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "nonLoggedDefaultActions", function () {
      if (!_this.main) {
        _this.main = $('main#app');
        _this.referrerUsername = $('#referer-username');
        _this.emailField = $('#email');
        _this.referrer = _this.main.attr('data-referrer') || _this.main.attr('data-next-referrer');
        _this.isReferrallLink = parseInt(_this.main.attr('data-is-referral-link'));
        _this.nextReferrer = _this.main.attr('data-next-referrer');
        _this.campaignFormFieldset = $('#campaign-form-fieldset');
        _this.selectBankName = $('#select-bank-name');
        $('input#account-number').characterCounter();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "logout", function () {
      if (_this.props.factoryReset()) {
        window.location.reload();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "loggedInDefaultAction", function () {
      _this.loginModalPopup.modal('close');
    });

    _defineProperty(_assertThisInitialized(_this), "initActions", function () {
      _this.labels = $('label');
      var defaultAction = !_this.props.alreadyExistingAccount ? _this.nonLoggedDefaultActions() : _this.loggedInDefaultAction();
    });

    _defineProperty(_assertThisInitialized(_this), "defaultPage", function () {
      return React.createElement("div", null, React.createElement("nav", {
        className: "white",
        role: "navigation"
      }, React.createElement("div", {
        className: "nav-wrapper container"
      }, React.createElement("a", {
        id: "logo-container",
        href: "#",
        className: "campaign-page-head-links no-underline"
      }, React.createElement("img", {
        src: defaults.imageDirectory + defaults.siteName.toLowerCase() + '.png',
        width: "100"
      }), React.createElement("span", {
        id: "campaign-page-ads-text"
      }, "Ads")), React.createElement("ul", {
        className: "right"
      }, React.createElement("li", null, React.createElement("a", {
        href: "#login-modal",
        className: "btn campaign-page-head-links btn-flat modal-trigger text-right continue-modal-trigger no-underline"
      }, "Get Started"))))), _this.loginModal(), React.createElement("div", {
        id: "index-banner"
      }, React.createElement("div", {
        className: "section no-pad-bot"
      }, React.createElement("div", {
        className: "container"
      }, React.createElement("br", null), " ", React.createElement("br", null), React.createElement("h3", {
        className: "header center teal-text text-lighten-2"
      }, "Grow your business with ", defaults.siteName, " Ads"), React.createElement("div", {
        className: "row left"
      }, React.createElement("h5", {
        className: "header col s12 light"
      }, React.createElement("p", null, "Get in front of customers when they\u2019re searching for businesses and products like yours on ", defaults.siteName, "."), React.createElement("p", null, "You only pay for results, like clicks and views to your website or calls to your business or product line.")), React.createElement("p", {
        className: "materialize-red-text center"
      }, "Preview")), React.createElement("div", {
        className: "row center"
      }, React.createElement("p", null, React.createElement("img", {
        className: "center responsive-img",
        src: defaults.imageDirectory + 'mikes-shop.png'
      })), React.createElement("a", {
        href: "#login-modal",
        className: "btn modal-trigger btn-large waves-effect start-now-button waves-light lighten-1 start-now-button"
      }, "Start now")), React.createElement("br", null), " ", React.createElement("br", null)))), React.createElement("div", {
        className: "container"
      }, React.createElement("div", {
        className: "section"
      }, React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col s12 m4"
      }, React.createElement("div", {
        className: "icon-block"
      }, React.createElement("h2", {
        className: "center brown-text"
      }, React.createElement("i", {
        className: "material-icons"
      }, "flash_on")), React.createElement("h5", {
        className: "center"
      }, "DRIVE WEBSITE VISITS"), React.createElement("p", {
        className: "light"
      }, "Grow online sales, bookings, or mailing list signups with online ads that direct people to your website."))), React.createElement("div", {
        className: "col s12 m4"
      }, React.createElement("div", {
        className: "icon-block"
      }, React.createElement("h2", {
        className: "center brown-text"
      }, React.createElement("i", {
        className: "material-icons"
      }, "group")), React.createElement("h5", {
        className: "center"
      }, " INCREASE STORE VISITS"), React.createElement("p", {
        className: "light"
      }, "Get more customers in the door with business ads that help people find your company."))), React.createElement("div", {
        className: "col s12 m4"
      }, React.createElement("div", {
        className: "icon-block"
      }, React.createElement("h2", {
        className: "center brown-text"
      }, React.createElement("i", {
        className: "material-icons"
      }, "phone")), React.createElement("h5", {
        className: "center"
      }, "GET MORE PHONE CALLS"), React.createElement("p", {
        className: "light"
      }, "Increase customer calls with ads that feature your phone number and a click-to-call button.")))))), React.createElement("div", {
        className: "container"
      }, React.createElement("div", {
        className: "section"
      }, React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col s12 center"
      }, React.createElement("h3", null, React.createElement("i", {
        className: "mdi-content-send brown-text"
      })), React.createElement("h4", null, "Set a budget that works for your business"), React.createElement("p", {
        className: "left-align light"
      }, defaults.siteName, " Ads can work for almost any advertising budget. Set a monthly budget cap, and never go over it. Plus, you can pause or adjust your spending anytime."), React.createElement("p", null, React.createElement("img", {
        className: "center responsive-img",
        src: defaults.imageDirectory + 'budget.png'
      })))))), React.createElement("div", {
        className: "container"
      }, React.createElement("div", {
        className: "section"
      }, React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col s12 center"
      }, React.createElement("h3", null, React.createElement("i", {
        className: "mdi-content-send brown-text"
      })), React.createElement("h4", null, "Get more customers with ", defaults.siteName, " Ads"), React.createElement("p", {
        className: "left-align light text-center center"
      }, React.createElement("a", {
        href: "#login-modal",
        className: "btn modal-trigger btn-large waves-effect start-now-button waves-light lighten-1 start-now-button"
      }, "Start now")))))), React.createElement("div", {
        className: "teal footer"
      }, React.createElement("div", {
        className: "container"
      }, React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col l6 s12"
      }, React.createElement("h5", {
        className: "white-text"
      }, "About ", defaults.siteName, " Ads"), React.createElement("p", {
        className: "grey-text text-lighten-4"
      }, defaults.siteName, " Ads makes it easy to show the world what\u2019s unique about your business, so you can reach customers searching for what you offer.")), React.createElement("div", {
        className: "col l3 s12"
      }, React.createElement("h5", {
        className: "white-text"
      }, "Connect"), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
        className: "white-text",
        href: 'https://facebook.com/' + defaults.siteName
      }, "Facebook")), React.createElement("li", null, React.createElement("a", {
        className: "white-text",
        href: 'https://twitter.com/' + defaults.siteName
      }, "Twitter")), React.createElement("li", null, React.createElement("a", {
        className: "white-text",
        href: 'https://instagram.com/' + defaults.siteName
      }, "Instagram")))))), React.createElement("div", {
        className: "footer-copyright"
      }, React.createElement("div", {
        className: "container"
      }, "Product of ", React.createElement("a", {
        className: "brown-text text-lighten-3 no-underline",
        href: "#",
        onClick: function onClick(e) {
          e.preventDefault();
        }
      }, "Movybe Studio")))));
    });

    _defineProperty(_assertThisInitialized(_this), "getSelectedCampaignType", function () {
      return _this.selectCampaignType.val();
    });

    _defineProperty(_assertThisInitialized(_this), "handleCampaignTypeChange", function (e) {
      _this.campaignTypeChanged = true;
      var action = _this.getSelectedCampaignType().toLowerCase().indexOf("merchant") >= 0 ? _this.props.resetState(_objectSpread({}, _this.props, {
        showRefererEmailField: false
      })) : _this.props.resetState(_objectSpread({}, _this.props, {
        showRefererEmailField: true
      }));
      $('#login-proceed').prop('disabled', false);
    });

    _defineProperty(_assertThisInitialized(_this), "enableStuffs", function () {
      var _this$emailField;

      (_this$emailField = _this.emailField).prop.apply(_this$emailField, _toConsumableArray(defaults.disabledFalse));

      _this.emailField.removeClass('disabled');

      _this.loginModalPopup.modal('close');
    });

    _defineProperty(_assertThisInitialized(_this), "handleCampaignFormSubmit", function (e) {
      var _this$emailField2;

      e.preventDefault();
      var formID = e.target.id;
      _this.campaignForm = $('#' + formID);
      M.updateTextFields();

      _this.campaignForm.validate();

      if (!_this.campaignForm.valid()) return M.toast({
        html: defaults.ensureAllFieldsAreFieldError
      });

      (_this$emailField2 = _this.emailField).prop.apply(_this$emailField2, _toConsumableArray(defaults.disabledTrue));

      _this.emailField.addClass('disabled');

      var data,
          email = _this.emailField.val().toLowerCase();

      if (!_this.props.emailVerified) {
        data = {
          email: email,
          action: 'EMAIL_EXISTS'
        };
        data = JSON.stringify(data);
        $.post(defaults.actions, {
          data: data
        }, function (response) {
          var _this$campaignFormFie;

          _this.emailField.removeClass('invalid');

          response = JSON.parse(response);

          if (!response.error) {
            _this.props.resetState(_objectSpread({}, _this.props, {
              emailVerified: true,
              stateReset: false,
              defaultUsername: response.username
            }));
          } else if (response.user.account_type == 'merchant') {
            _this.loginModalPopup.modal('close');

            _this.props.resetState(_objectSpread({}, _this.props, {
              emailVerified: true,
              stateReset: false,
              email: email,
              user: response.user,
              accountType: response.user.account_type,
              alreadyExistingAccount: true
            }));
          } else {
            data = {
              email: email,
              action: 'FETCH_AFFILIATE_DETAILS'
            };
            data = JSON.stringify(data);
            $.post(defaults.actions, {
              data: data
            }, function (response1) {
              response1 = JSON.parse(response1);

              _this.props.resetState(_objectSpread({}, _this.props, {
                emailVerified: true,
                stateReset: false,
                email: email,
                user: response1.user,
                accountType: response1.user.account_type,
                alreadyExistingAccount: true
              }));
            });
          }

          (_this$campaignFormFie = _this.campaignFormFieldset).prop.apply(_this$campaignFormFie, _toConsumableArray(defaults.disabledFalse));
        });
      } else if (!_this.props.showRefererEmailField) {
        data = {
          action: "SIGNUP_MERCHANT",
          email: email,
          accountType: defaults.merchantAccountType
        };
        data = JSON.stringify(data);
        $.post(defaults.actions, {
          data: data
        }, function (response) {
          response = JSON.parse(response);

          _this.enableStuffs();

          var action = response.error ? _this.props.resetState(_objectSpread({}, _this.props, {
            user: response.user,
            email: email,
            accountType: defaults.merchantAccountType,
            alreadyExistingAccount: true
          })) : defaults.showToast(defaults.checkNetworkConnectionError);
        });
      } else {
        var username = $('#username').val().toLowerCase();
        var referrerUsername = $('#referer-username').val().toLowerCase();
        data = {
          email: email,
          referer_username: referrerUsername,
          username: username,
          action: 'VALIDATE_AFFILIATE'
        };
        data = JSON.stringify(data);
        $.post(defaults.actions, {
          data: data
        }, function (response) {
          var _this$campaignFormFie2;

          response = JSON.parse(response);
          if (!response.success) return defaults.showToast(response.error);

          (_this$campaignFormFie2 = _this.campaignFormFieldset).prop.apply(_this$campaignFormFie2, _toConsumableArray(defaults.disabledTrue));

          _this.props.resetState(_objectSpread({}, _this.props, {
            defaultUsername: response.username
          }));

          var amount = response.amount;
          var accountName = $('#account-name').val();
          var accountNumber = $('#account-number').val();
          var bankName = $('#select-bank-name').val();
          var changeAdminReferrer = _this.isReferrallLink === 0 && referrerUsername === _this.nextReferrer.toLowerCase() ? 1 : 0;
          defaults.payWithPaystack(email, defaults.convertToPaystack(amount), accountName, function (response) {
            if (response.status !== defaults.successText) return defaults.showToast(defaults.transactionNotSuccessfulMessage);
            var data = {
              email: email,
              change_admin_referrer: changeAdminReferrer,
              referer_username: referrerUsername,
              username: username,
              action: 'SIGNUP_AFFILIATE',
              account_name: accountName,
              is_referral_link: _this.isReferrallLink,
              next_referrer: _this.nextReferrer,
              account_number: accountNumber,
              bank_name: bankName,
              reference_code: response.reference
            };
            data = JSON.stringify(data);
            $.post(defaults.actions, {
              data: data
            }, function (response) {
              console.log(response);
              response = JSON.parse(response);

              _this.enableStuffs();

              var action = !response.success ? _this.props.resetState(_objectSpread({}, _this.props, {
                emailVerified: true,
                stateReset: false
              })) : _this.loginModalPopup.modal('close') && _this.props.resetState(_objectSpread({}, _this.props, {
                emailVerified: true,
                stateReset: false,
                email: email,
                user: response.user,
                accountType: response.user.account_type,
                alreadyExistingAccount: true
              }));
              tourJS.start('affiliate-account-tour');
            });
          });
        });
      }

      ;
    });

    _defineProperty(_assertThisInitialized(_this), "loginModal", function () {
      var disabledUserEmailField = _this.props.emailVerified ? "disabled" : null;
      var accountTypeSelection = _this.props.emailVerified && !_this.props.stateReset ? React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("select", {
        id: "select-campaign-type",
        autoComplete: "off",
        required: "required",
        onChange: _this.handleCampaignTypeChange
      }, React.createElement("option", {
        defaultValue: "",
        disabled: true
      }, "Select your account type"), React.createElement("option", {
        defaultValue: "merchant"
      }, "Merchant/Advertiser")), React.createElement("label", {
        className: "active"
      }, "Campaign type"))) : null;
      var refererEmailAddressField = _this.props.showRefererEmailField ? React.createElement("div", null, React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("input", {
        id: "referer-username",
        name: "referer-username",
        defaultValue: _this.referrer,
        type: "text",
        required: "required",
        minLength: defaults.minimumAccountUsernameLength,
        maxLength: defaults.maximumAccountUsernameLength,
        pattern: "[a-zA-Z0-9]{".concat(defaults.minimumAccountUsernameLength, ",").concat(defaults.maximumAccountUsernameLength, "}"),
        className: "validate"
      }), React.createElement("label", {
        htmlFor: "referer-username",
        className: "active"
      }, "Referrer username"), React.createElement("span", {
        className: "helper-text referer-username",
        "data-error": "please,check the username again",
        "data-success": ""
      }, "referer username is mandatory"))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("h5", null, "Bank Details"))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("input", {
        id: "account-name",
        name: "account-name",
        type: "text",
        required: "required",
        pattern: "[a-zA-Z ]{2,60}",
        className: "validate"
      }), React.createElement("label", {
        htmlFor: "account-name",
        className: "active"
      }, "Your account name"), React.createElement("span", {
        className: "helper-text account-name strong",
        "data-error": "Please enter a valid account name",
        "data-success": ""
      }, "Note: Bank details can't be changed later."))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("input", {
        id: "account-number",
        "data-length": "10",
        size: "10",
        maxLength: "10",
        minLength: "10",
        pattern: "(\\d{10})$",
        required: "required",
        name: "account-number",
        type: "text",
        className: "validate"
      }), React.createElement("label", {
        htmlFor: "account-number",
        className: "active"
      }, "Your account number"), React.createElement("span", {
        className: "helper-text account-number",
        "data-length": "10",
        "data-error": "Please enter a valid account number",
        "data-success": ""
      }, "valid account number"))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("select", {
        id: "select-bank-name",
        required: true
      }, React.createElement("option", {
        defaultValue: "",
        disabled: true
      }, "Select your Bank Name")), React.createElement("label", {
        className: "active"
      }, "Bank Name"))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("h5", null, "Profile Detail(s)"))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("input", {
        defaultValue: "",
        id: "username",
        name: "username",
        type: "text",
        minLength: defaults.minimumAccountUsernameLength,
        maxLength: defaults.maximumAccountUsernameLength,
        pattern: "[a-zA-Z0-9]{".concat(defaults.minimumAccountUsernameLength, ",").concat(defaults.maximumAccountUsernameLength, "}"),
        required: "required",
        className: "validate"
      }), React.createElement("label", {
        htmlFor: "username",
        className: "active"
      }, "Your username"), React.createElement("span", {
        className: "helper-text username",
        "data-error": "username must be alphabet not more than 6 characters long",
        "data-success": ""
      })))) : null;
      var headerToShow = _this.props.showRefererEmailField ? React.createElement("span", null, "How Affiliate Works") : React.createElement("span", null, "How Merchant works");
      headerToShow = _this.props.emailVerified ? headerToShow : React.createElement("span", null, "Welcome to ", defaults.siteName, " Campaign");
      var summaryToShow = _this.props.showRefererEmailField ? React.createElement("div", null, React.createElement("p", null, "Now, earning money has become easier with our affiliate account, we pay you ", React.createElement("strong", {
        className: "strong"
      }, "\u20A6", defaults.amountPaidForReferer), " for each user you refer."), React.createElement("p", null, "You also get paid ", React.createElement("strong", {
        className: "strong"
      }, "\u20A6", defaults.amountPaidForUniqueVisitor), " when a unique user visits our website via your link."), React.createElement("p", null, "We pay you when you share our ads on your social media account, and lots more.")) : React.createElement("div", null, React.createElement("p", null, "You can now promote your products/services, to the reach of  millions of potential customers, at the cheapest price."), React.createElement("p", null, "Sign up now to get started:"));
      summaryToShow = _this.props.emailVerified ? summaryToShow : null;
      return React.createElement("div", {
        id: "login-modal",
        className: "modal modal-fixed-footer"
      }, React.createElement("div", {
        className: "modal-content"
      }, React.createElement("h5", null, headerToShow), summaryToShow, React.createElement("div", {
        className: "row"
      }, React.createElement("fieldset", {
        id: "campaign-form-fieldset"
      }, React.createElement("form", {
        validate: "validate",
        className: "col s12",
        autoComplete: "on",
        name: "campaign-form",
        id: "campaign-form",
        action: "#",
        onSubmit: _this.handleCampaignFormSubmit,
        noValidate: "noValidate"
      }, React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "input-field col s12"
      }, React.createElement("input", {
        id: "email",
        autoComplete: "off",
        name: "email",
        required: "required",
        type: "text",
        className: "validate",
        pattern: "^([a-zA-Z0-9_\\-\\._]+)@([a-zA-Z0-9_\\-\\._]+)\\.([a-zA-Z0-9_\\-\\.]{2,5})$"
      }), React.createElement("label", {
        htmlFor: "email",
        className: "active"
      }, "Your Email"), React.createElement("span", {
        className: "helper-text email",
        "data-error": "please enter a valid email",
        "data-success": ""
      }, "Please enter a valid email address"))), accountTypeSelection, refererEmailAddressField)))), React.createElement("div", {
        className: "modal-footer"
      }, React.createElement("a", {
        href: "#",
        onClick: function onClick(e) {
          e.preventDefault();

          _this.loginModalPopup.modal('close');
        },
        className: "no-underline grey-text",
        id: "close-login-modal"
      }, "CLOSE"), React.createElement("button", {
        type: "submit",
        form: "campaign-form",
        className: "waves-effect waves-light btn",
        id: "login-proceed",
        value: "Proceed"
      }, "Proceed")));
    });

    return _this;
  }

  _createClass(Campaign, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return this.props !== nextProps;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.campaignTypeChanged = false;
      this.stateRestored = false;
      var storageObj = this.props;

      if (localStorage.getItem(defaults.savedCampaignState)) {
        storageObj = JSON.parse(localStorage.getItem(defaults.savedCampaignState));
        {
          var storageObjectKeysCount = 0,
              propsKeysCount = 0;
          Object.keys(storageObj).forEach(function (key) {
            return typeof storageObj[key] !== 'function' ? storageObjectKeysCount += 1 : null;
          });
          Object.keys(this.props).forEach(function (key) {
            return typeof _this2.props[key] !== 'function' ? propsKeysCount += 1 : null;
          });
          if (storageObjectKeysCount !== propsKeysCount && this.props.restoreState()) this.stateRestored = true;
        }
      }

      var stateToReset = this.stateRestored ? _objectSpread({}, this.props, {
        stateReset: true,
        emailVerified: false,
        showRefererEmailField: false
      }) : _objectSpread({}, storageObj, {
        stateReset: true,
        emailVerified: false,
        showRefererEmailField: false
      });
      this.props.resetState(stateToReset, function () {
        if (!_this2.props.alreadyExistingAccount) {
          $('.modal').modal();
          _this2.loginModalPopup = $('.modal#login-modal');

          _this2.loginModalPopup.modal({
            dismissible: false
          });
        }

        _this2.initActions();
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      try {
        this.initActions();
        var selectBankNameID = "select-bank-name";
        this.selectBankName = $('#' + selectBankNameID) ? $('#' + selectBankNameID) : null;
        var select = this.selectBankName ? document.getElementById(selectBankNameID) : null;
        this.selectCampaignType = $('select#select-campaign-type');
        this.selectCampaignType.formSelect();
        var option;
        var populateSelectBankNameAction = this.selectBankName != null ? defaults.banks.map(function (bank, index) {
          option = document.createElement("option");
          option.text = bank;
          option.value = bank;
          select.add(option);
        }) : null;
        var formSelectAction = this.selectBankName ? this.selectBankName.formSelect() : null;
      } catch (e) {}

      $('select').formSelect();
    }
  }, {
    key: "render",
    value: function render() {
      var template = null;

      if (this.props.user.account_type !== undefined) {
        template = this.props.user.account_type == "merchant" ? React.createElement(Merchant, null) : React.createElement(Affiliate, null);
        template = this.props.user.is_site_admin_login_email ? React.createElement(Admin, {
          logout: this.logout
        }) : template;
      } else {
        template = this.defaultPage();
      }

      return React.createElement("div", {
        id: "campaign"
      }, template, React.createElement("div", {
        id: "paystackEmbedContainer"
      }));
    }
  }]);

  return Campaign;
}(React.Component);